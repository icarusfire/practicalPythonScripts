def restore_values_with_actual_tps(conf_file_path, definitions, tps_mapping):
    """
    Updates the TPS placeholders in the given conf file with actual values from tps_mapping.
    
    :param conf_file_path: Path to the conf file
    :param definitions: Parsed test definitions from the conf file
    :param tps_mapping: Dictionary containing actual TPS values mapped by (file_name, test_case)
    """
    conf_modified = False  # Track if modifications were made

    for test_case_name, test_config in definitions.items():
        if "tps" in test_config and test_config["tps"] == "${tps}":
            key = (Path(conf_file_path).name, test_case_name)  # Match file name and test case
            if key in tps_mapping:
                test_config["tps"] = tps_mapping[key]
                conf_modified = True  # Mark modification

    if conf_modified:
        # Save back the modified configuration
        with open(conf_file_path, "w") as f:
            f.write(str(definitions))
