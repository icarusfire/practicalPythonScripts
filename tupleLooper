def restore_values_with_actual_tps(conf_file_path, tps_mapping):
    """
    Updates the TPS placeholders in the given conf file with actual values from tps_mapping.
    
    :param conf_file_path: Path to the .conf file
    :param tps_mapping: Dictionary containing actual TPS values mapped by (file_name, test_case)
    """
    file_name = Path(conf_file_path).name
    updated_lines = []
    
    with open(conf_file_path, "r", encoding="utf-8") as f:
        for line in f:
            match = re.search(r'(\s*tps\s*=\s*)"(\${tps})"', line)  # Match tps = "${tps}"
            if match:
                indent = match.group(1)  # Preserve indentation
                test_case_match = re.search(r'(\w+)\s*=\s*\{', line)  # Extract test case name

                if test_case_match:
                    test_case = test_case_match.group(1)
                    key = (file_name, test_case)

                    if key in tps_mapping:
                        real_tps = tps_mapping[key]
                        line = f'{indent}{real_tps}\n'  # Replace only the TPS value

            updated_lines.append(line)
    
    # Overwrite only if changes were made
    with open(conf_file_path, "w", encoding="utf-8") as f:
        f.writelines(updated_lines)
