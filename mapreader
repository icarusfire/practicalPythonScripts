from sklearn.model_selection import StratifiedKFold
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import precision_recall_fscore_support, accuracy_score
import pandas as pd
import numpy as np

# Stratified K-Fold setup
skf = StratifiedKFold(n_splits=10, shuffle=True, random_state=42)

accuracies = []
precisions = []
recalls = []

for train_idx, test_idx in skf.split(X_tfidf, y):
    X_train, X_test = X_tfidf[train_idx], X_tfidf[test_idx]
    y_train, y_test = y.iloc[train_idx], y.iloc[test_idx]

    model = LogisticRegression(class_weight='balanced', solver='liblinear')
    model.fit(X_train, y_train)
    y_pred = model.predict(X_test)

    acc = accuracy_score(y_test, y_pred)
    prec, rec, _, _ = precision_recall_fscore_support(y_test, y_pred, average=None, labels=[0, 1])

    accuracies.append(acc)
    precisions.append(prec)
    recalls.append(rec)

# Average results
summary = pd.DataFrame({
    'Accuracy': accuracies,
    'Precision_0': [p[0] for p in precisions],
    'Recall_0': [r[0] for r in recalls],
    'Precision_1': [p[1] for p in precisions],
    'Recall_1': [r[1] for r in recalls],
})

print("=== Average over 10 folds ===")
print(summary.mean().round(3))
